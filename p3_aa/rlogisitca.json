{
    "cells": [
     {
      "cell_type": "code",
      "execution_count": 1,
      "id": "1895ac7e",
      "metadata": {},
      "outputs": [],
      "source": [
       "import pandas as pd"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 2,
      "id": "79b3ff72",
      "metadata": {},
      "outputs": [],
      "source": [
       "pd.options.display.max_colwidth = None"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 3,
      "id": "0271b947",
      "metadata": {},
      "outputs": [],
      "source": [
       "dictionary = pd.read_excel(\"./dataset_credit_scoring/Data Dictionary.xls\", skiprows=1)"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 4,
      "id": "cb659775",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/html": [
          "<div>\n",
          "<style scoped>\n",
          "    .dataframe tbody tr th:only-of-type {\n",
          "        vertical-align: middle;\n",
          "    }\n",
          "\n",
          "    .dataframe tbody tr th {\n",
          "        vertical-align: top;\n",
          "    }\n",
          "\n",
          "    .dataframe thead th {\n",
          "        text-align: right;\n",
          "    }\n",
          "</style>\n",
          "<table border=\"1\" class=\"dataframe\">\n",
          "  <thead>\n",
          "    <tr style=\"text-align: right;\">\n",
          "      <th></th>\n",
          "      <th>Description</th>\n",
          "      <th>Type</th>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>Variable Name</th>\n",
          "      <th></th>\n",
          "      <th></th>\n",
          "    </tr>\n",
          "  </thead>\n",
          "  <tbody>\n",
          "    <tr>\n",
          "      <th>SeriousDlqin2yrs</th>\n",
          "      <td>Person experienced 90 days past due delinquency or worse</td>\n",
          "      <td>Y/N</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>RevolvingUtilizationOfUnsecuredLines</th>\n",
          "      <td>Total balance on credit cards and personal lines of credit except real estate and no installment debt like car loans divided by the sum of credit limits</td>\n",
          "      <td>percentage</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>age</th>\n",
          "      <td>Age of borrower in years</td>\n",
          "      <td>integer</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>NumberOfTime30-59DaysPastDueNotWorse</th>\n",
          "      <td>Number of times borrower has been 30-59 days past due but no worse in the last 2 years.</td>\n",
          "      <td>integer</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>DebtRatio</th>\n",
          "      <td>Monthly debt payments, alimony,living costs divided by monthy gross income</td>\n",
          "      <td>percentage</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>MonthlyIncome</th>\n",
          "      <td>Monthly income</td>\n",
          "      <td>real</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>NumberOfOpenCreditLinesAndLoans</th>\n",
          "      <td>Number of Open loans (installment like car loan or mortgage) and Lines of credit (e.g. credit cards)</td>\n",
          "      <td>integer</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>NumberOfTimes90DaysLate</th>\n",
          "      <td>Number of times borrower has been 90 days or more past due.</td>\n",
          "      <td>integer</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>NumberRealEstateLoansOrLines</th>\n",
          "      <td>Number of mortgage and real estate loans including home equity lines of credit</td>\n",
          "      <td>integer</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>NumberOfTime60-89DaysPastDueNotWorse</th>\n",
          "      <td>Number of times borrower has been 60-89 days past due but no worse in the last 2 years.</td>\n",
          "      <td>integer</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>NumberOfDependents</th>\n",
          "      <td>Number of dependents in family excluding themselves (spouse, children etc.)</td>\n",
          "      <td>integer</td>\n",
          "    </tr>\n",
          "  </tbody>\n",
          "</table>\n",
          "</div>"
         ],
         "text/plain": [
          "                                                                                                                                                                                   Description  \\\n",
          "Variable Name                                                                                                                                                                                    \n",
          "SeriousDlqin2yrs                                                                                                                     Person experienced 90 days past due delinquency or worse    \n",
          "RevolvingUtilizationOfUnsecuredLines  Total balance on credit cards and personal lines of credit except real estate and no installment debt like car loans divided by the sum of credit limits   \n",
          "age                                                                                                                                                                   Age of borrower in years   \n",
          "NumberOfTime30-59DaysPastDueNotWorse                                                                   Number of times borrower has been 30-59 days past due but no worse in the last 2 years.   \n",
          "DebtRatio                                                                                                           Monthly debt payments, alimony,living costs divided by monthy gross income   \n",
          "MonthlyIncome                                                                                                                                                                   Monthly income   \n",
          "NumberOfOpenCreditLinesAndLoans                                                           Number of Open loans (installment like car loan or mortgage) and Lines of credit (e.g. credit cards)   \n",
          "NumberOfTimes90DaysLate                                                                                                            Number of times borrower has been 90 days or more past due.   \n",
          "NumberRealEstateLoansOrLines                                                                                    Number of mortgage and real estate loans including home equity lines of credit   \n",
          "NumberOfTime60-89DaysPastDueNotWorse                                                                   Number of times borrower has been 60-89 days past due but no worse in the last 2 years.   \n",
          "NumberOfDependents                                                                                                 Number of dependents in family excluding themselves (spouse, children etc.)   \n",
          "\n",
          "                                            Type  \n",
          "Variable Name                                     \n",
          "SeriousDlqin2yrs                             Y/N  \n",
          "RevolvingUtilizationOfUnsecuredLines  percentage  \n",
          "age                                      integer  \n",
          "NumberOfTime30-59DaysPastDueNotWorse     integer  \n",
          "DebtRatio                             percentage  \n",
          "MonthlyIncome                               real  \n",
          "NumberOfOpenCreditLinesAndLoans          integer  \n",
          "NumberOfTimes90DaysLate                  integer  \n",
          "NumberRealEstateLoansOrLines             integer  \n",
          "NumberOfTime60-89DaysPastDueNotWorse     integer  \n",
          "NumberOfDependents                       integer  "
         ]
        },
        "execution_count": 4,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "dictionary.set_index(\"Variable Name\")"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 5,
      "id": "e30da92e",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/html": [
          "<div>\n",
          "<style scoped>\n",
          "    .dataframe tbody tr th:only-of-type {\n",
          "        vertical-align: middle;\n",
          "    }\n",
          "\n",
          "    .dataframe tbody tr th {\n",
          "        vertical-align: top;\n",
          "    }\n",
          "\n",
          "    .dataframe thead th {\n",
          "        text-align: right;\n",
          "    }\n",
          "</style>\n",
          "<table border=\"1\" class=\"dataframe\">\n",
          "  <thead>\n",
          "    <tr style=\"text-align: right;\">\n",
          "      <th></th>\n",
          "      <th>SeriousDlqin2yrs</th>\n",
          "      <th>RevolvingUtilizationOfUnsecuredLines</th>\n",
          "      <th>age</th>\n",
          "      <th>NumberOfTime30-59DaysPastDueNotWorse</th>\n",
          "      <th>DebtRatio</th>\n",
          "      <th>MonthlyIncome</th>\n",
          "      <th>NumberOfOpenCreditLinesAndLoans</th>\n",
          "      <th>NumberOfTimes90DaysLate</th>\n",
          "      <th>NumberRealEstateLoansOrLines</th>\n",
          "      <th>NumberOfTime60-89DaysPastDueNotWorse</th>\n",
          "      <th>NumberOfDependents</th>\n",
          "    </tr>\n",
          "  </thead>\n",
          "  <tbody>\n",
          "    <tr>\n",
          "      <th>0</th>\n",
          "      <td>1</td>\n",
          "      <td>0.766127</td>\n",
          "      <td>45</td>\n",
          "      <td>2</td>\n",
          "      <td>0.802982</td>\n",
          "      <td>9120.0</td>\n",
          "      <td>13</td>\n",
          "      <td>0</td>\n",
          "      <td>6</td>\n",
          "      <td>0</td>\n",
          "      <td>2.0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>1</th>\n",
          "      <td>0</td>\n",
          "      <td>0.957151</td>\n",
          "      <td>40</td>\n",
          "      <td>0</td>\n",
          "      <td>0.121876</td>\n",
          "      <td>2600.0</td>\n",
          "      <td>4</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>1.0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>2</th>\n",
          "      <td>0</td>\n",
          "      <td>0.658180</td>\n",
          "      <td>38</td>\n",
          "      <td>1</td>\n",
          "      <td>0.085113</td>\n",
          "      <td>3042.0</td>\n",
          "      <td>2</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>0.0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>3</th>\n",
          "      <td>0</td>\n",
          "      <td>0.233810</td>\n",
          "      <td>30</td>\n",
          "      <td>0</td>\n",
          "      <td>0.036050</td>\n",
          "      <td>3300.0</td>\n",
          "      <td>5</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>0.0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>4</th>\n",
          "      <td>0</td>\n",
          "      <td>0.907239</td>\n",
          "      <td>49</td>\n",
          "      <td>1</td>\n",
          "      <td>0.024926</td>\n",
          "      <td>63588.0</td>\n",
          "      <td>7</td>\n",
          "      <td>0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>0.0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>...</th>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "      <td>...</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>149995</th>\n",
          "      <td>0</td>\n",
          "      <td>0.040674</td>\n",
          "      <td>74</td>\n",
          "      <td>0</td>\n",
          "      <td>0.225131</td>\n",
          "      <td>2100.0</td>\n",
          "      <td>4</td>\n",
          "      <td>0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>0.0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>149996</th>\n",
          "      <td>0</td>\n",
          "      <td>0.299745</td>\n",
          "      <td>44</td>\n",
          "      <td>0</td>\n",
          "      <td>0.716562</td>\n",
          "      <td>5584.0</td>\n",
          "      <td>4</td>\n",
          "      <td>0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>2.0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>149997</th>\n",
          "      <td>0</td>\n",
          "      <td>0.246044</td>\n",
          "      <td>58</td>\n",
          "      <td>0</td>\n",
          "      <td>3870.000000</td>\n",
          "      <td>NaN</td>\n",
          "      <td>18</td>\n",
          "      <td>0</td>\n",
          "      <td>1</td>\n",
          "      <td>0</td>\n",
          "      <td>0.0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>149998</th>\n",
          "      <td>0</td>\n",
          "      <td>0.000000</td>\n",
          "      <td>30</td>\n",
          "      <td>0</td>\n",
          "      <td>0.000000</td>\n",
          "      <td>5716.0</td>\n",
          "      <td>4</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>0</td>\n",
          "      <td>0.0</td>\n",
          "    </tr>\n",
          "    <tr>\n",
          "      <th>149999</th>\n",
          "      <td>0</td>\n",
          "      <td>0.850283</td>\n",
          "      <td>64</td>\n",
          "      <td>0</td>\n",
          "      <td>0.249908</td>\n",
          "      <td>8158.0</td>\n",
          "      <td>8</td>\n",
          "      <td>0</td>\n",
          "      <td>2</td>\n",
          "      <td>0</td>\n",
          "      <td>0.0</td>\n",
          "    </tr>\n",
          "  </tbody>\n",
          "</table>\n",
          "<p>150000 rows × 11 columns</p>\n",
          "</div>"
         ],
         "text/plain": [
          "        SeriousDlqin2yrs  RevolvingUtilizationOfUnsecuredLines  age  \\\n",
          "0                      1                              0.766127   45   \n",
          "1                      0                              0.957151   40   \n",
          "2                      0                              0.658180   38   \n",
          "3                      0                              0.233810   30   \n",
          "4                      0                              0.907239   49   \n",
          "...                  ...                                   ...  ...   \n",
          "149995                 0                              0.040674   74   \n",
          "149996                 0                              0.299745   44   \n",
          "149997                 0                              0.246044   58   \n",
          "149998                 0                              0.000000   30   \n",
          "149999                 0                              0.850283   64   \n",
          "\n",
          "        NumberOfTime30-59DaysPastDueNotWorse    DebtRatio  MonthlyIncome  \\\n",
          "0                                          2     0.802982         9120.0   \n",
          "1                                          0     0.121876         2600.0   \n",
          "2                                          1     0.085113         3042.0   \n",
          "3                                          0     0.036050         3300.0   \n",
          "4                                          1     0.024926        63588.0   \n",
          "...                                      ...          ...            ...   \n",
          "149995                                     0     0.225131         2100.0   \n",
          "149996                                     0     0.716562         5584.0   \n",
          "149997                                     0  3870.000000            NaN   \n",
          "149998                                     0     0.000000         5716.0   \n",
          "149999                                     0     0.249908         8158.0   \n",
          "\n",
          "        NumberOfOpenCreditLinesAndLoans  NumberOfTimes90DaysLate  \\\n",
          "0                                    13                        0   \n",
          "1                                     4                        0   \n",
          "2                                     2                        1   \n",
          "3                                     5                        0   \n",
          "4                                     7                        0   \n",
          "...                                 ...                      ...   \n",
          "149995                                4                        0   \n",
          "149996                                4                        0   \n",
          "149997                               18                        0   \n",
          "149998                                4                        0   \n",
          "149999                                8                        0   \n",
          "\n",
          "        NumberRealEstateLoansOrLines  NumberOfTime60-89DaysPastDueNotWorse  \\\n",
          "0                                  6                                     0   \n",
          "1                                  0                                     0   \n",
          "2                                  0                                     0   \n",
          "3                                  0                                     0   \n",
          "4                                  1                                     0   \n",
          "...                              ...                                   ...   \n",
          "149995                             1                                     0   \n",
          "149996                             1                                     0   \n",
          "149997                             1                                     0   \n",
          "149998                             0                                     0   \n",
          "149999                             2                                     0   \n",
          "\n",
          "        NumberOfDependents  \n",
          "0                      2.0  \n",
          "1                      1.0  \n",
          "2                      0.0  \n",
          "3                      0.0  \n",
          "4                      0.0  \n",
          "...                    ...  \n",
          "149995                 0.0  \n",
          "149996                 2.0  \n",
          "149997                 0.0  \n",
          "149998                 0.0  \n",
          "149999                 0.0  \n",
          "\n",
          "[150000 rows x 11 columns]"
         ]
        },
        "execution_count": 5,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "df = pd.read_csv(\"./dataset_credit_scoring/cs-construction.csv\")\n",
       "df.drop(\"Unnamed: 0\", axis=1, inplace=True)\n",
       "df"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 6,
      "id": "cf672925",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "SeriousDlqin2yrs                            0\n",
          "RevolvingUtilizationOfUnsecuredLines        0\n",
          "age                                         0\n",
          "NumberOfTime30-59DaysPastDueNotWorse        0\n",
          "DebtRatio                                   0\n",
          "MonthlyIncome                           29731\n",
          "NumberOfOpenCreditLinesAndLoans             0\n",
          "NumberOfTimes90DaysLate                     0\n",
          "NumberRealEstateLoansOrLines                0\n",
          "NumberOfTime60-89DaysPastDueNotWorse        0\n",
          "NumberOfDependents                       3924\n",
          "dtype: int64"
         ]
        },
        "execution_count": 6,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "df.isna().sum()"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 7,
      "id": "7b16f662",
      "metadata": {},
      "outputs": [],
      "source": [
       "df.dropna(subset=[\"MonthlyIncome\"], inplace=True)"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 8,
      "id": "4eb74057",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "SeriousDlqin2yrs                        0\n",
          "RevolvingUtilizationOfUnsecuredLines    0\n",
          "age                                     0\n",
          "NumberOfTime30-59DaysPastDueNotWorse    0\n",
          "DebtRatio                               0\n",
          "MonthlyIncome                           0\n",
          "NumberOfOpenCreditLinesAndLoans         0\n",
          "NumberOfTimes90DaysLate                 0\n",
          "NumberRealEstateLoansOrLines            0\n",
          "NumberOfTime60-89DaysPastDueNotWorse    0\n",
          "NumberOfDependents                      0\n",
          "dtype: int64"
         ]
        },
        "execution_count": 8,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "df.isna().sum()"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 9,
      "id": "ee16aab8",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "image/png": "\n",
         "text/plain": [
          "<Figure size 720x720 with 12 Axes>"
         ]
        },
        "metadata": {
         "needs_background": "light"
        },
        "output_type": "display_data"
       }
      ],
      "source": [
       "df.hist(figsize=(10,10));"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 10,
      "id": "0babed0a",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "image/png": "\n",
         "text/plain": [
          "<Figure size 504x504 with 4 Axes>"
         ]
        },
        "metadata": {
         "needs_background": "light"
        },
        "output_type": "display_data"
       }
      ],
      "source": [
       "import seaborn as sns\n",
       "\n",
       "sns.clustermap(df.corr(), cmap=\"bwr\", vmin=-1, vmax=1, figsize=(7,7));"
      ]
     },
     {
      "cell_type": "markdown",
      "id": "65ccbe00",
      "metadata": {},
      "source": [
       "## Construcción de un modelo de regresión logística"
      ]
     },
     {
      "cell_type": "markdown",
      "id": "62530302",
      "metadata": {},
      "source": [
       "**Partimos los datos en training y test:**"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 11,
      "id": "a9fcb1d3",
      "metadata": {},
      "outputs": [],
      "source": [
       "from sklearn.model_selection import train_test_split"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 12,
      "id": "8f55e45d",
      "metadata": {},
      "outputs": [],
      "source": [
       "# En el parámetro stratify especificamos la columna que queremos\n",
       "# que tenga exactamente tras la partición (en training y test)\n",
       "# las mismas estadísticas que antes de la partición:\n",
       "df_train, df_test = train_test_split(df, test_size=0.3, random_state=1,\n",
       "                                     stratify=df[\"SeriousDlqin2yrs\"])"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 13,
      "id": "43df989b",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "0.06948590243537403"
         ]
        },
        "execution_count": 13,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "# Fracción de ejemplos que tienen SeriousDlqin2yrs=1 antes de la partición:\n",
       "df[\"SeriousDlqin2yrs\"].mean()"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 14,
      "id": "504ec028",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "0.06948733786287832"
         ]
        },
        "execution_count": 14,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "# Fracción de ejemplos que tienen SeriousDlqin2yrs=1 en training:\n",
       "df_train[\"SeriousDlqin2yrs\"].mean()"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 15,
      "id": "ff4dd980",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "0.06948255314431419"
         ]
        },
        "execution_count": 15,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "# Fracción de ejemplos que tienen SeriousDlqin2yrs=1 en test:\n",
       "df_test[\"SeriousDlqin2yrs\"].mean()"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 16,
      "id": "443b899c",
      "metadata": {},
      "outputs": [],
      "source": [
       "y_train = df_train[\"SeriousDlqin2yrs\"]\n",
       "y_test  = df_test[\"SeriousDlqin2yrs\"]\n",
       "X_train = df_train.drop(\"SeriousDlqin2yrs\", axis=1)\n",
       "X_test  = df_test.drop(\"SeriousDlqin2yrs\", axis=1)"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 17,
      "id": "b6426965",
      "metadata": {},
      "outputs": [],
      "source": [
       "# Estandarizo los datos X ya que la regresión logística\n",
       "# necesita que los datos de entrada estén normalizados:\n",
       "\n",
       "from sklearn.preprocessing import StandardScaler\n",
       "\n",
       "scaler = StandardScaler()\n",
       "scaler.fit(X_train)\n",
       "X_train_std = scaler.transform(X_train)\n",
       "X_test_std  = scaler.transform(X_test)"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 18,
      "id": "66c712dd",
      "metadata": {},
      "outputs": [],
      "source": [
       "from sklearn.linear_model import LogisticRegression"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 19,
      "id": "edf39e3d",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "LogisticRegression()"
         ]
        },
        "execution_count": 19,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "model = LogisticRegression()\n",
       "model.fit(X_train_std, y_train)"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 20,
      "id": "5333fef5",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "0.9312253527818691"
         ]
        },
        "execution_count": 20,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "# Tasa de acierto en training (en tanto por 1):\n",
       "model.score(X_train_std, y_train)"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 21,
      "id": "9c7bc03c",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "0.931265763144037"
         ]
        },
        "execution_count": 21,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "# Tasa de acierto en test (en tanto por 1):\n",
       "model.score(X_test_std, y_test)"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 22,
      "id": "bf34558e",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "0.931265763144037"
         ]
        },
        "execution_count": 22,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "# Cálculo a mano de la tasa de acierto en test (en tanto por 1):\n",
       "clases_predichas = model.predict(X_test_std)\n",
       "(clases_predichas == y_test).mean() # accuracy en tanto por 1"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": 23,
      "id": "0cc9625e",
      "metadata": {},
      "outputs": [
       {
        "data": {
         "text/plain": [
          "array([[0.98174263, 0.01825737],\n",
          "       [0.89663334, 0.10336666],\n",
          "       [0.93059421, 0.06940579],\n",
          "       ...,\n",
          "       [0.97024516, 0.02975484],\n",
          "       [0.92819845, 0.07180155],\n",
          "       [0.95863324, 0.04136676]])"
         ]
        },
        "execution_count": 23,
        "metadata": {},
        "output_type": "execute_result"
       }
      ],
      "source": [
       "# Probabilidades de clase=0 (primera columna) y\n",
       "# clase=1 (segunda columna) en los ejemplos de test:\n",
       "model.predict_proba(X_test_std)"
      ]
     },
     {
      "cell_type": "code",
      "execution_count": null,
      "id": "afa4166e",
      "metadata": {},
      "outputs": [],
      "source": []
     }
    ],
    "metadata": {
     "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
     },
     "language_info": {
      "codemirror_mode": {
       "name": "ipython",
       "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.7"
     }
    },
    "nbformat": 4,
    "nbformat_minor": 5
   }